{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\One Life\\\\Desktop\\\\ProjectFinal\\\\src\\\\components\\\\java\\\\Java3.js\";\nimport React from 'react';\nimport Tutorial from '../Tutorial';\nimport { SiJava } from 'react-icons/si';\n\nconst Java1 = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Tutorial, {\n      icons: /*#__PURE__*/_jsxDEV(SiJava, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 30\n      }, this),\n      name: \"JAVA\",\n      language: \"java\",\n      next: \"/Java4\",\n      theoryContent: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Java Constructors\", /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 10,\n            columnNumber: 45\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"In this tutorial, we will learn about Java constructors, their types, and how to use them with the help of examples.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"What is a Constructor?\", /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 50\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"A constructor in Java is similar to a method that is invoked when an object of the class is created.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Unlike Java methods, a constructor has the same name as that of the class and does not have any return type. For example,\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"card card-body\",\n          children: /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: `class Test {\n  Test() {\n    // constructor body\n  }\n}\n`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Here, Test() is a constructor. It has the same name as that of the class and doesn't have a return type.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Java No-Arg Constructors\", /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 52\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 24\n        }, this), \"Similar to methods, a Java constructor may or may not have any parameters (arguments). If a constructor does not accept any parameters, it is known as a no-argument constructor.\", /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"card card-body\",\n          children: /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: `private Constructor() {\n   // body of the constructor\n}\n`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Java Parameterized Constructor\", /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 60\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 26\n        }, this), \"A Java constructor can also accept one or more parameters. Such constructors are known as parameterized constructors (constructor with parameters).\", /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"card card-body\",\n          children: /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: `private Constructor() {\n   // body of the constructor\n}\n`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 20\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Java1;\nexport default Java1;\n\nvar _c;\n\n$RefreshReg$(_c, \"Java1\");","map":{"version":3,"sources":["C:/Users/One Life/Desktop/ProjectFinal/src/components/java/Java3.js"],"names":["React","Tutorial","SiJava","Java1"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,SAAQC,MAAR,QAAqB,gBAArB;;AACA,MAAMC,KAAK,GAAG,MAAM;AAChB,sBACI;AAAA,2BACE,QAAC,QAAD;AAAU,MAAA,KAAK,eAAI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAAnB;AAA8B,MAAA,IAAI,EAAG,MAArC;AAA4C,MAAA,QAAQ,EAAG,MAAvD;AAA8D,MAAA,IAAI,EAAC,QAAnE;AACA,MAAA,aAAa,eACJ;AAAA,gCACI;AAAA,uDAAqB;AAAA;AAAA;AAAA;AAAA,kBAArB;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFL,eAMI;AAAA,4DAA0B;AAAA;AAAA;AAAA;AAAA,kBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARJ,eASI;AAAK,UAAA,KAAK,EAAC,gBAAX;AAAA,iCACK;AAAA,sBACM;AAClC;AACA;AACA;AACA;AACA;AAN4B;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,gBATJ,eAoBhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBApBgB,eAuBI;AAAA,8DAA4B;AAAA;AAAA;AAAA;AAAA,kBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,gBAvBJ,oMA2BI;AAAK,UAAA,KAAK,EAAC,gBAAX;AAAA,iCACK;AAAA,sBACM;AAClC;AACA;AACA;AAJ4B;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,gBA3BJ,eAoCM;AAAA,oEAAkC;AAAA;AAAA;AAAA;AAAA,kBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,gBApCN,sKAsCI;AAAK,UAAA,KAAK,EAAC,gBAAX;AAAA,iCACK;AAAA,sBACM;AAClC;AACA;AACA;AAJ4B;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,gBAtCJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADJ;AA4DH,CA7DD;;KAAMA,K;AA+DN,eAAeA,KAAf","sourcesContent":["import React from 'react'\r\nimport Tutorial from '../Tutorial'\r\nimport {SiJava} from 'react-icons/si'\r\nconst Java1 = () => {\r\n    return (\r\n        <div>\r\n          <Tutorial icons = {<SiJava/>} name = \"JAVA\" language = \"java\" next=\"/Java4\" \r\n          theoryContent = {\r\n                   <p>\r\n                       <h3>Java Constructors<hr/></h3>\r\n                        <p>In this tutorial, we will learn about Java constructors, their types, and how to use them with the help of examples.</p>\r\n\r\n                      \r\n\r\n                       <h4>What is a Constructor?<hr/></h4>\r\n                       <p>A constructor in Java is similar to a method that is invoked when an object of the class is created.</p>\r\n                       <p>Unlike Java methods, a constructor has the same name as that of the class and does not have any return type. For example,</p>\r\n                       <div class=\"card card-body\">\r\n                            <pre>\r\n                                {`class Test {\r\n  Test() {\r\n    // constructor body\r\n  }\r\n}\r\n`}\r\n                            </pre>      \r\n                         </div>\r\n    \r\n   <p>Here, Test() is a constructor. It has the same name as that of the class and doesn't have a return type.</p>\r\n                                \r\n  \r\n                       <h4>Java No-Arg Constructors<hr/></h4>\r\n                       Similar to methods, a Java constructor may or may not have any parameters (arguments).\r\n                        If a constructor does not accept any parameters, it is known as a no-argument constructor.\r\n                      \r\n                       <div class=\"card card-body\">\r\n                            <pre>\r\n                                {`private Constructor() {\r\n   // body of the constructor\r\n}\r\n`}\r\n                            </pre>      \r\n                         </div>\r\n\r\n                         <h4>Java Parameterized Constructor<hr/></h4>\r\n                         A Java constructor can also accept one or more parameters. Such constructors are known as parameterized constructors (constructor with parameters).\r\n                       <div class=\"card card-body\">\r\n                            <pre>\r\n                                {`private Constructor() {\r\n   // body of the constructor\r\n}\r\n`}\r\n                            </pre>      \r\n                         </div>\r\n\r\n                         \r\n                       \r\n                        \r\n                   </p> \r\n                }\r\n                />\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Java1\r\n"]},"metadata":{},"sourceType":"module"}