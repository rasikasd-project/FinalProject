{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\One Life\\\\Desktop\\\\ProjectFinal\\\\src\\\\components\\\\csharp\\\\Csharp1.js\";\nimport React from 'react';\nimport { SiCsharp } from 'react-icons/si';\nimport Tutorial from '../Tutorial';\n\nconst Csharp1 = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Tutorial, {\n      icons: /*#__PURE__*/_jsxDEV(SiCsharp, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 32\n      }, this),\n      name: \"C-SHARP\",\n      language: \"csharp\",\n      theoryContent: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"C# Hello World - Your First C# Program\", /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 10,\n            columnNumber: 63\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"The \\u201CHello World!\\u201D program is often the first program we see when we dive into a new language. It simply prints Hello World! on the output screen.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"card card-body\",\n          children: /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: `// Hello World! program\nnamespace HelloWorld\n{\n    class Hello {         \n        static void Main(string[] args)\n        {\n            System.Console.WriteLine(\"Hello World!\");\n        }\n    }\n}\n`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 26\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Create a String in Java\", /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 48\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"card card-body\",\n          children: /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: `class Main {\npublic static void main(String[] args) {\n \n // create strings\n String first = \"Java\";\n String second = \"Python\";\n String third = \"JavaScript\";\n\n // print strings\n System.out.println(first);   // print Java\n System.out.println(second);  // print Python\n System.out.println(third);   // print JavaScript\n}\n}\n`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 26\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Java Parameterized Constructor\", /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 57\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 23\n        }, this), \"A Java constructor can also accept one or more parameters. Such constructors are known as parameterized constructors (constructor with parameters).\", /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"card card-body\",\n          children: /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: `class Main {\n\nString languages;\n\n// constructor accepting single value\nMain(String lang) {\nlanguages = lang;\nSystem.out.println(languages + \" Programming Language\");\n}\n\npublic static void main(String[] args) {\n\n// call constructor by passing a single value\nMain obj1 = new Main(\"Java\");\nMain obj2 = new Main(\"Python\");\nMain obj3 = new Main(\"C\");\n}\n}\n`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 26\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Java String Operations\", /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 49\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \" 1. Get Length of a String\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 20\n        }, this), \"To find the length of a string, we use the length() method of the String. For example,\", /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"card card-body\",\n          children: /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: `class Main {\npublic static void main(String[] args) {\n\n // create a string\n String greet = \"Hello! World\";\n System.out.println(\"String: \" + greet);\n\n // get the length of greet\n int length = greet.length();\n System.out.println(\"Length: \" + length);\n}\n}\n`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 26\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \" 2. Join two Strings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 23\n        }, this), \"To find the length of a string, we use the length() method of the String. For example,\", /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"card card-body\",\n          children: /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: `class Main {\npublic static void main(String[] args) {\n\n // create first string\n String first = \"Java \";\n System.out.println(\"First String: \" + first);\n\n // create second\n String second = \"Programming\";\n System.out.println(\"Second String: \" + second);\n\n // join two strings\n String joinedString = first.concat(second);\n System.out.println(\"Joined String: \" + joinedString);\n}\n}\n`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 26\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"3. Compare two Strings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 24\n        }, this), \"In Java, we can make comparisons between two strings using the equals() method. For example,\", /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"card card-body\",\n          children: /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: `class Main {\npublic static void main(String[] args) {\n\n // create 3 strings\n String first = \"java programming\";\n String second = \"java programming\";\n String third = \"python programming\";\n\n // compare first and second strings\n boolean result1 = first.equals(second);\n System.out.println(\"Strings first and second are equal: \" + result1);\n\n // compare first and third strings\n boolean result2 = first.equals(third);\n System.out.println(\"Strings first and third are equal: \" + result2);\n}\n}\n`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 26\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this), \"/>\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Csharp1;\nexport default Csharp1;\n\nvar _c;\n\n$RefreshReg$(_c, \"Csharp1\");","map":{"version":3,"sources":["C:/Users/One Life/Desktop/ProjectFinal/src/components/csharp/Csharp1.js"],"names":["React","SiCsharp","Tutorial","Csharp1"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,gBAAvB;AACA,OAAOC,QAAP,MAAqB,aAArB;;AACA,MAAMC,OAAO,GAAG,MAAM;AAClB,sBACI;AAAA,4BACI,QAAC,QAAD;AAAU,MAAA,KAAK,eAAI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cAAnB;AAAgC,MAAA,IAAI,EAAG,SAAvC;AAAiD,MAAA,QAAQ,EAAG,QAA5D;AACC,MAAA,aAAa,eACV;AAAA,gCACI;AAAA,4EAA0C;AAAA;AAAA;AAAA;AAAA,kBAA1C;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFL,eAGI;AAAK,UAAA,KAAK,EAAC,gBAAX;AAAA,iCACK;AAAA,sBACM;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXyB;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAsBI;AAAA,6DAA2B;AAAA;AAAA;AAAA;AAAA,kBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,gBAtBJ,eAwBI;AAAK,UAAA,KAAK,EAAC,gBAAX;AAAA,iCACK;AAAA,sBACM;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfyB;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,gBAxBJ,eA4CM;AAAA,oEAAkC;AAAA;AAAA;AAAA;AAAA,kBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,gBA5CN,sKAiDI;AAAK,UAAA,KAAK,EAAC,gBAAX;AAAA,iCAEK;AAAA,sBACM;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnByB;AAAA;AAAA;AAAA;AAAA;AAFL;AAAA;AAAA;AAAA;AAAA,gBAjDJ,eA4EM;AAAA,4DAA0B;AAAA;AAAA;AAAA;AAAA,kBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,gBA5EN,eA6EG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA7EH,yGA+EI;AAAK,UAAA,KAAK,EAAC,gBAAX;AAAA,iCACK;AAAA,sBACM;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbyB;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,gBA/EJ,eAiGM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjGN,yGAmGI;AAAK,UAAA,KAAK,EAAC,gBAAX;AAAA,iCACK;AAAA,sBACM;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjByB;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,gBAnGJ,eA2HO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA3HP,+GA6HI;AAAK,UAAA,KAAK,EAAC,gBAAX;AAAA,iCACK;AAAA,sBACM;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlByB;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,gBA7HJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmKH,CApKD;;KAAMA,O;AAsKN,eAAeA,OAAf","sourcesContent":["import React from 'react'\r\nimport {SiCsharp} from 'react-icons/si'\r\nimport Tutorial from '../Tutorial'\r\nconst Csharp1 = () => {\r\n    return (\r\n        <div>\r\n            <Tutorial icons = {<SiCsharp/>} name = \"C-SHARP\" language = \"csharp\"\r\n             theoryContent = {\r\n                <p>\r\n                    <h3>C# Hello World - Your First C# Program<hr/></h3>\r\n                     <p>The “Hello World!” program is often the first program we see when we dive into a new language. It simply prints Hello World! on the output screen.</p>\r\n                    <div class=\"card card-body\">\r\n                         <pre>\r\n                             {`// Hello World! program\r\nnamespace HelloWorld\r\n{\r\n    class Hello {         \r\n        static void Main(string[] args)\r\n        {\r\n            System.Console.WriteLine(\"Hello World!\");\r\n        }\r\n    }\r\n}\r\n`}\r\n                         </pre>      \r\n                      </div>\r\n \r\n\r\n                             \r\n\r\n                    <h4>Create a String in Java<hr/></h4>\r\n                    \r\n                    <div class=\"card card-body\">\r\n                         <pre>\r\n                             {`class Main {\r\npublic static void main(String[] args) {\r\n \r\n // create strings\r\n String first = \"Java\";\r\n String second = \"Python\";\r\n String third = \"JavaScript\";\r\n\r\n // print strings\r\n System.out.println(first);   // print Java\r\n System.out.println(second);  // print Python\r\n System.out.println(third);   // print JavaScript\r\n}\r\n}\r\n`}\r\n                         </pre>      \r\n                      </div>\r\n\r\n                      <h4>Java Parameterized Constructor<hr/></h4>\r\n                      A Java constructor can also accept one or more parameters.\r\n                     Such constructors are known as parameterized constructors (constructor with parameters).\r\n\r\n\r\n                    <div class=\"card card-body\">\r\n\r\n                         <pre>\r\n                             {`class Main {\r\n\r\nString languages;\r\n\r\n// constructor accepting single value\r\nMain(String lang) {\r\nlanguages = lang;\r\nSystem.out.println(languages + \" Programming Language\");\r\n}\r\n\r\npublic static void main(String[] args) {\r\n\r\n// call constructor by passing a single value\r\nMain obj1 = new Main(\"Java\");\r\nMain obj2 = new Main(\"Python\");\r\nMain obj3 = new Main(\"C\");\r\n}\r\n}\r\n`}\r\n                         </pre>      \r\n                      </div>\r\n\r\n\r\n\r\n                      <h4>Java String Operations<hr/></h4>\r\n                   <h5> 1. Get Length of a String</h5>\r\n                   To find the length of a string, we use the length() method of the String. For example,\r\n                    <div class=\"card card-body\">\r\n                         <pre>\r\n                             {`class Main {\r\npublic static void main(String[] args) {\r\n\r\n // create a string\r\n String greet = \"Hello! World\";\r\n System.out.println(\"String: \" + greet);\r\n\r\n // get the length of greet\r\n int length = greet.length();\r\n System.out.println(\"Length: \" + length);\r\n}\r\n}\r\n`}\r\n                         </pre>      \r\n                      </div>\r\n\r\n                      <h5> 2. Join two Strings</h5>\r\n                   To find the length of a string, we use the length() method of the String. For example,\r\n                    <div class=\"card card-body\">\r\n                         <pre>\r\n                             {`class Main {\r\npublic static void main(String[] args) {\r\n\r\n // create first string\r\n String first = \"Java \";\r\n System.out.println(\"First String: \" + first);\r\n\r\n // create second\r\n String second = \"Programming\";\r\n System.out.println(\"Second String: \" + second);\r\n\r\n // join two strings\r\n String joinedString = first.concat(second);\r\n System.out.println(\"Joined String: \" + joinedString);\r\n}\r\n}\r\n`}\r\n                         </pre>      \r\n                      </div>\r\n\r\n\r\n\r\n                       <h5>3. Compare two Strings</h5>\r\n                       In Java, we can make comparisons between two strings using the equals() method. For example,\r\n                    <div class=\"card card-body\">\r\n                         <pre>\r\n                             {`class Main {\r\npublic static void main(String[] args) {\r\n\r\n // create 3 strings\r\n String first = \"java programming\";\r\n String second = \"java programming\";\r\n String third = \"python programming\";\r\n\r\n // compare first and second strings\r\n boolean result1 = first.equals(second);\r\n System.out.println(\"Strings first and second are equal: \" + result1);\r\n\r\n // compare first and third strings\r\n boolean result2 = first.equals(third);\r\n System.out.println(\"Strings first and third are equal: \" + result2);\r\n}\r\n}\r\n`}\r\n                         </pre>      \r\n                      </div>\r\n\r\n                    \r\n                      \r\n                    \r\n                     \r\n                </p> \r\n             }\r\n             />/>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Csharp1\r\n"]},"metadata":{},"sourceType":"module"}